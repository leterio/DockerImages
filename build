#!/usr/bin/env -S bash
#===============================================================================
#          FILE: build
#
#         USAGE: build [opts] <project>
#
#   DESCRIPTION: Docker image builder
#
#       OPTIONS: ---
#  REQUIREMENTS: ---
#          BUGS: ---
#         NOTES: ---
#        AUTHOR: Vinícius Letério (viniciusleterio@gmail.com)
#  ORGANIZATION:
#       CREATED: 01/04/2021
#      REVISION: 2.0
#===============================================================================

#set -o nounset

### log: Log any message to output
# Arguments:
#   message) to log
# Return: Formatted message on output
log() {
    local message="${1:-""}"
    [[ $message ]] && echo "${0##*/}: $message"
}

### usage: Help
# Arguments:
#   none)
# Return: Help text
usage() {
    local RC="${1:-0}"
    echo "Usage: ${0##*/} [opts] <project>
    -h          This help
    -u \"<username>\"
                Set the docker user
    -L          Tag this build as \"latest\"
    -T          Tag this build with current date (as \"yyyy-MM-dd\")
    -t \"<customtag1>[,customtag2,...]\"
                Add custom tags in addition to the predefined ones
                NOTE: Tags are separated by ','
    -P \"<platform1>[,platform2,...]
                Define target platforms
                NOTE: Platforms are separated by ','
                Default: \"linux/amd64,linux/386,linux/arm64,
                           linux/arm/v7,linux/arm/v6\"
    -a \"<arg1=val1>[,arg2=val2,...]\"
                Arguments to pass via --build-arg
    -p          Push image to Docker Hub
    -l          Load image to Docker
                NOTE: Require tags to be pushed
    -d          Print Docker command instead of call Docker
" >&2
    exit $RC
}

### Script variables
project=
username="viniciusleterio"
tags=
push=
load=
platform="linux/amd64,linux/386,linux/arm64,linux/arm/v7,linux/arm/v6"
arguments=
test=

while getopts ":h:u:LTt:LP:a:pld" opt; do
  case "$opt" in
    h) usage 0 ;;
    u) username="$OPTARG" ;;
    L) tags+="${tags:+,}latest" ;;
    T) tags+="${tags:+,}$(date +%Y-%m-%d)" ;;
    t) tags+="${tags:+,}$OPTARG" ;;
    P) platform="${OPTARG}" ;;
    a) arguments+="${arguments:+,}$OPTARG" ;;
    p) push="true" ;;
    l) load="true" ;;
    d) test="true" ;;
    "?") log "Unknown option: -$OPTARG"; usage 1 ;;
    ":") log "No argument value for option: -$OPTARG"; usage 2 ;;
  esac
done
shift $((OPTIND - 1))

# Project directory sanity check
if [[ $# == 0 ]]; then
    log "Missing project directory."
    usage 11
elif [[ $# -gt 1 ]]; then
    log "Only the project directory must be passed after the arguments"
    usage 12
elif [[ ! -d "$1" ]]; then
    log "Project \"$1\" not found"
    usage 13
else
    project="$1"
fi

[[ ! "$platform" ]] && {
    log "Empty platform list"
    usage 14
}

[[ "$push" == "true" ]] && [[ ! "$tags" ]] && push=

export COMMAND="docker buildx build \
    --platform $platform \
    ${tags:+$(sed "s/^/--tag ${username}\/${project}:/g;s/\,/ --tag ${username}\/${project}:/g" <<< $tags)} \
    ${arguments:+$(sed "s/^/--build-arg /g;s/\,/ --build-arg /g" <<< $arguments)} \
    ${push:+--push} \
    ${load:+--load} \
    ${project}"
#s/,/ /g; s/\</--tag ${username}\/${project}:/g
if [[ "$test" == "true" ]]; then
    echo "$(sed -E 's/[[:space:]]+/ /g;s/--/\n\t--/g;s/(.*)[[:space:]]/\1\n\t/g' <<< $COMMAND)"
else
    $COMMAND
fi
